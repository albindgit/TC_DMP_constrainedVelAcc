#!/usr/bin/env python

import numpy as np


class GMRwOA:
    def __init__(self, params):
        self.x0 = np.array(params['x0'])
        self.s_end = params['s_end']
        self.n = self.x0.size
        self.o_c = np.array(params['o_c'])
        self.o_r = params['o_r']
        self.priors = np.array(params['priors'])
        self.mu = np.array(params['mu'])
        self.sigma = np.array(params['sigma'])
        self.nKernels = self.priors.size
        self.A = np.zeros((self.nKernels, self.n, self.n))
        self.b = np.zeros((self.nKernels, self.n))
        for w in range(self.nKernels):
            self.A[w, :, :] = self.sigma[w, self.n:, :self.n].dot(np.linalg.inv(
                self.sigma[w, :self.n, :self.n]))
            self.b[w, :] = self.mu[w, self.n:] - self.A[w, :, :].dot(self.mu[w, :self.n])

    def f(self, x):
        weights = self.weights(x)
        f = np.zeros(self.n)
        gmr_f = sum(weights[w] * (self.A[w, :, :].dot(x) + self.b[w, :]) for w in range(self.nKernels))
        return self.modulation_matrix(x).dot(gmr_f)

    def g(self, x):
        return x

    def gx(self, x):
        return np.eye(self.n)

    def dx_gxf(self, x):
        x1 = x[0]
        x2 = x[1]
        t2 = x2 + 7.0e1
        t3 = x1 + 1.0e2
        t4 = t2 ** 2
        t5 = t3 ** 2
        t6 = x2 - 9.816261394778176e1
        t7 = x1 * 1.530596366426007e-5
        t8 = x2 * 2.109513339111852e-4
        t9 = t7 + t8 - 1.971943673320373e-2
        t10 = x1 + 6.455638083061622e1
        t11 = x1 * 4.582396934010209e-4
        t12 = x2 * 1.530596366426007e-5
        t13 = t11 + t12 + 2.807982275662759e-2
        t79 = t6 * t9
        t80 = t10 * t13
        t14 = -t79 - t80
        t15 = np.exp(t14)
        t16 = x2 - 5.415693532998247e1
        t17 = x1 * 1.312704257151209e-5
        t82 = x2 * 2.629035561972274e-4
        t18 = t17 - t82 + 1.571727929602906e-2
        t19 = t16 * t18
        t20 = x1 + 1.126855799373714e2
        t21 = x1 * 8.327024557111857e-4
        t83 = x2 * 1.312704257151209e-5
        t22 = t21 - t83 + 9.454447953270757e-2
        t84 = t20 * t22
        t23 = t19 - t84
        t24 = np.exp(t23)
        t25 = x1 + 2.251733280467149e1
        t26 = x1 * 4.670158568124115e-4
        t27 = x2 * 4.289836618923725e-4
        t28 = t26 + t27 + 6.370025953155209e-2
        t29 = x2 + 1.239774676360322e2
        t30 = x1 * 4.289836618923725e-4
        t31 = x2 * 1.040569631086783e-3
        t32 = t30 + t31 + 1.386667556436968e-1
        t88 = t25 * t28
        t89 = t29 * t32
        t33 = -t88 - t89
        t34 = np.exp(t33)
        t35 = t34 * 2.408872289627689e-5
        t36 = x1 - 7.499276410192803e1
        t37 = x2 * 1.142541742241694e-4
        t90 = x1 * 8.178935231312593e-4
        t38 = t37 - t90 + 7.263953274615121e-2
        t39 = t36 * t38
        t40 = x2 + 9.893237408811206e1
        t41 = x2 * 5.666798935371871e-4
        t91 = x1 * 1.142541742241694e-4
        t42 = t41 - t91 + 6.463122355088623e-2
        t92 = t40 * t42
        t43 = t39 - t92
        t44 = np.exp(t43)
        t45 = t44 * 2.888145048134885e-5
        t46 = x1 - 2.264354107101735e1
        t47 = x1 * 2.247790700044474e-3
        t48 = x2 * 2.608028701302809e-3
        t49 = t47 + t48 - 5.480387720544926e-2
        t50 = x2 - 1.497658429905395
        t51 = x1 * 2.608028701302809e-3
        t52 = x2 * 2.072560326248954e-2
        t53 = t51 + t52 - 9.00948794532844e-2
        t93 = t46 * t49
        t94 = t50 * t53
        t54 = -t93 - t94
        t55 = np.exp(t54)
        t56 = t55 * 2.698593356722665e-4
        t57 = x2 + 6.301228183938932e1
        t58 = x1 * 9.222652594971037e-4
        t59 = x2 * 7.779669674794524e-4
        t60 = t58 + t59 + 1.624861712161579e-1
        t61 = x1 + 1.230282678775932e2
        t62 = x1 * 1.965364578835002e-3
        t63 = x2 * 9.222652594971037e-4
        t64 = t62 + t63 + 2.999094383441548e-1
        t95 = t57 * t60
        t96 = t61 * t64
        t65 = -t95 - t96
        t66 = np.exp(t65)
        t67 = t66 * 2.919147494282987e-5
        t68 = x1 - 7.861117292542697e1
        t69 = x1 * 3.302595736312175e-3
        t70 = x2 * 2.702662948139369e-3
        t71 = t69 + t70 - 2.134336703875113e-1
        t72 = x2 + 1.708953540592262e1
        t73 = x1 * 2.702662948139369e-3
        t74 = x2 * 3.450285534628542e-3
        t75 = t73 + t74 - 1.534957275707511e-1
        t97 = t68 * t71
        t98 = t72 * t75
        t76 = -t97 - t98
        t77 = np.exp(t76)
        t78 = t77 * 1.071251714048381e-4
        t81 = t15 * 5.43860953025742e-6
        t85 = t24 * 3.869452814178776e-5
        t86 = t35 + t45 + t56 + t67 + t78 + t81 + t85
        t87 = 1.0 / t86
        t99 = x1 * 6.605191472624351e-3
        t100 = x2 * 5.405325896278738e-3
        t101 = t99 + t100 - 4.268673407750226e-1
        t102 = x1 * 3.869851041803628
        t103 = x2 * 1.010037993543203e1
        t104 = t102 + t103
        t105 = x1 * 4.495581400088948e-3
        t106 = x2 * 5.216057402605618e-3
        t107 = t105 + t106 - 1.096077544108985e-1
        t108 = x2 * 2.285083484483388e-4
        t117 = x1 * 1.635787046262519e-3
        t109 = t108 - t117 + 1.452790654923024e-1
        t110 = x1 * 1.665404911422371e-3
        t115 = x2 * 2.625408514302419e-5
        t111 = t110 - t115 + 1.890889590654151e-1
        t112 = x1 * 1.983731639577469
        t113 = x2 * 3.191903357349043
        t114 = t112 + t113 - 1.4210854715202e-14
        t116 = t24 * t111 * 3.869452814178776e-5
        t118 = t77 * t101 * 1.071251714048381e-4
        t119 = x1 * 9.164793868020419e-4
        t120 = x2 * 3.061192732852015e-5
        t121 = t119 + t120 + 5.615964551325517e-2
        t122 = t15 * t121 * 5.43860953025742e-6
        t123 = x1 * 9.34031713624823e-4
        t124 = x2 * 8.57967323784745e-4
        t125 = t123 + t124 + 1.274005190631042e-1
        t126 = t34 * t125 * 2.408872289627689e-5
        t127 = t55 * t107 * 2.698593356722665e-4
        t128 = x1 * 3.930729157670005e-3
        t129 = x2 * 1.844530518994207e-3
        t130 = t128 + t129 + 5.998188766883095e-1
        t131 = t66 * t130 * 2.919147494282987e-5
        t136 = t44 * t109 * 2.888145048134885e-5
        t132 = t116 + t118 + t122 + t126 + t127 + t131 - t136
        t133 = 1.0 / t86 ** 2
        t134 = x1 * 3.231732335122654e-5
        t154 = x2 * 1.638686742732473
        t135 = t134 - t154
        t137 = x1 * 1.54461351435013
        t138 = x2 * 2.410526413045497
        t139 = t137 + t138
        t140 = x1 * 7.128956258032981e-1
        t141 = x2 * 2.282924141766298
        t142 = t140 + t141
        t143 = x1 * 3.04539679230562e-1
        t144 = x2 * 2.17037228002446
        t145 = t143 + t144 - 2.842170943040401e-14
        t146 = x1 * 6.694733262807462e-1
        t147 = x2 * 2.074491355757708
        t148 = t146 + t147
        t149 = x1 * 2.0
        t150 = t149 + 2.0e2
        t151 = t4 + t5
        t152 = 1.0 / t151 ** 2
        t183 = t3 * t150
        t153 = t4 + t5 - t183
        t155 = x1 * 1.145820509435398
        t157 = x2 * 9.81512008356454e-1
        t156 = t155 - t157
        t158 = x1 * 5.169583816001215e-1
        t166 = x2 * 5.977666165428746
        t159 = t158 - t166 + 4.440892098500626e-16
        t160 = x1 * 1.659508447689607
        t161 = x2 * 5.924016783798807e-1
        t162 = t160 + t161
        t163 = x1 * 2.279092938141525
        t165 = x2 * 1.950918964167032e-2
        t164 = t163 - t165
        t167 = x2 * 2.48561120484202
        t175 = x1 * 9.336740956565702e-1
        t168 = t167 - t175 + 2.842170943040401e-14
        t169 = x1 * 2.43188361814004
        t174 = x2 * 1.144763805707237e-3
        t170 = t169 - t174
        t171 = x2 * 3.289247523618103e-3
        t173 = x1 * 2.186101706496526
        t172 = t171 - t173 + 7.105427357601002e-14
        t176 = 1.0 / t151 ** 3
        t177 = t15 * t87 * t156 * 5.43860953025742e-6
        t178 = t55 * t87 * t159 * 2.698593356722665e-4
        t179 = t24 * t87 * t162 * 3.869452814178776e-5
        t180 = t66 * t87 * t164 * 2.919147494282987e-5
        t181 = t44 * t87 * t170 * 2.888145048134885e-5
        t224 = t77 * t87 * t168 * 1.071251714048381e-4
        t225 = t34 * t87 * t172 * 2.408872289627689e-5
        t182 = t177 + t178 + t179 + t180 + t181 - t224 - t225
        t184 = t152 * t153 * 9.0e2
        t185 = t184 + 1.0
        t186 = x1 * 1.844530518994207e-3
        t187 = x2 * 1.555933934958905e-3
        t188 = t186 + t187 + 3.249723424323159e-1
        t189 = x1 * 5.216057402605618e-3
        t190 = x2 * 4.145120652497908e-2
        t191 = t189 + t190 - 1.801897589065688e-1
        t192 = t66 * t188 * 2.919147494282987e-5
        t193 = x1 * 5.405325896278738e-3
        t194 = x2 * 6.900571069257084e-3
        t195 = t193 + t194 - 3.069914551415021e-1
        t196 = t77 * t195 * 1.071251714048381e-4
        t197 = x1 * 2.625408514302419e-5
        t212 = x2 * 5.258071123944548e-4
        t198 = t197 - t212 + 3.143455859205812e-2
        t199 = x2 * 1.133359787074374e-3
        t214 = x1 * 2.285083484483388e-4
        t200 = t199 - t214 + 1.292624471017725e-1
        t201 = t44 * t200 * 2.888145048134885e-5
        t202 = x1 * 8.57967323784745e-4
        t203 = x2 * 2.081139262173565e-3
        t204 = t202 + t203 + 2.773335112873937e-1
        t205 = t34 * t204 * 2.408872289627689e-5
        t206 = t55 * t191 * 2.698593356722665e-4
        t207 = x1 * 3.061192732852015e-5
        t208 = x2 * 4.219026678223704e-4
        t209 = t207 + t208 - 3.943887346640746e-2
        t210 = t15 * t209 * 5.43860953025742e-6
        t213 = t24 * t198 * 3.869452814178776e-5
        t211 = t192 + t196 + t201 + t205 + t206 + t210 - t213
        t215 = x2 * 2.0
        t216 = t215 + 1.4e2
        t217 = t55 * t87 * t104 * 2.698593356722665e-4
        t218 = t77 * t87 * t114 * 1.071251714048381e-4
        t219 = t44 * t87 * t139 * 2.888145048134885e-5
        t220 = t34 * t87 * t142 * 2.408872289627689e-5
        t221 = t66 * t87 * t145 * 2.919147494282987e-5
        t222 = t15 * t87 * t148 * 5.43860953025742e-6
        t244 = t24 * t87 * t135 * 3.869452814178776e-5
        t223 = t217 + t218 + t219 + t220 + t221 + t222 - t244
        t226 = t150 * t152 * 9.0e2
        t260 = t2 * t216
        t227 = t4 + t5 - t260
        t228 = t15 * t87 * 6.231670342579768e-6
        t229 = t24 * t87 * 6.421389633066001e-5
        t230 = t34 * t87 * 5.266039823087284e-5
        t231 = t44 * t87 * 7.023632629371505e-5
        t232 = t55 * t87 * 1.395060454288188e-4
        t233 = t66 * t87 * 6.653008439613883e-5
        t234 = t77 * t87 * 1.000199975334673e-4
        t235 = t15 * t132 * t133 * t156 * 5.43860953025742e-6
        t236 = t55 * t132 * t133 * t159 * 2.698593356722665e-4
        t237 = t24 * t132 * t133 * t162 * 3.869452814178776e-5
        t238 = t66 * t132 * t133 * t164 * 2.919147494282987e-5
        t239 = t44 * t87 * t109 * t170 * 2.888145048134885e-5
        t240 = t34 * t87 * t125 * t172 * 2.408872289627689e-5
        t241 = t44 * t132 * t133 * t170 * 2.888145048134885e-5
        t242 = t77 * t87 * t101 * t168 * 1.071251714048381e-4
        t243 = t228 + t229 + t230 + t231 + t232 + t233 + t234 + t235 + t236 + t237 + t238 + t239 + t240 + t241 + t242 - t15 * t87 * t121 * t156 * 5.43860953025742e-6 - t24 * t87 * t111 * t162 * 3.869452814178776e-5 - t55 * t87 * t107 * t159 * 2.698593356722665e-4 - t66 * t87 * t130 * t164 * 2.919147494282987e-5 - t34 * t132 * t133 * t172 * 2.408872289627689e-5 - t77 * t132 * t133 * t168 * 1.071251714048381e-4
        t245 = t15 * t87 * 3.641004012563601e-6
        t246 = t34 * t87 * 1.717274518394355e-5
        t247 = t44 * t87 * 4.46106787275255e-5
        t248 = t55 * t87 * 1.044315431291755e-3
        t249 = t66 * t87 * 8.889962415356397e-6
        t250 = t77 * t87 * 2.125075919109369e-4
        t251 = t55 * t104 * t132 * t133 * 2.698593356722665e-4
        t252 = t44 * t87 * t109 * t139 * 2.888145048134885e-5
        t253 = t24 * t87 * t111 * t135 * 3.869452814178776e-5
        t254 = t77 * t114 * t132 * t133 * 1.071251714048381e-4
        t255 = t44 * t132 * t133 * t139 * 2.888145048134885e-5
        t256 = t34 * t132 * t133 * t142 * 2.408872289627689e-5
        t257 = t66 * t132 * t133 * t145 * 2.919147494282987e-5
        t258 = t15 * t132 * t133 * t148 * 5.43860953025742e-6
        t259 = t245 + t246 + t247 + t248 + t249 + t250 + t251 + t252 + t253 + t254 + t255 + t256 + t257 + t258 - t24 * t87 * 1.25050357788129e-9 - t55 * t87 * t104 * t107 * 2.698593356722665e-4 - t15 * t87 * t121 * t148 * 5.43860953025742e-6 - t77 * t87 * t101 * t114 * 1.071251714048381e-4 - t34 * t87 * t125 * t142 * 2.408872289627689e-5 - t24 * t132 * t133 * t135 * 3.869452814178776e-5 - t66 * t87 * t130 * t145 * 2.919147494282987e-5
        t261 = t152 * t227 * 9.0e2
        t262 = t261 + 1.0
        t263 = t15 * t87 * 5.338060562709511e-6
        t264 = t34 * t87 * 7.923377213370146e-8
        t265 = t44 * t87 * 3.306243916737403e-8
        t266 = t55 * t87 * 1.613129020273186e-3
        t267 = t66 * t87 * 5.695020205797351e-7
        t268 = t77 * t87 * 2.662715263644876e-4
        t269 = t55 * t87 * t159 * t191 * 2.698593356722665e-4
        t270 = t34 * t133 * t172 * t211 * 2.408872289627689e-5
        t271 = t66 * t87 * t164 * t188 * 2.919147494282987e-5
        t272 = t15 * t87 * t156 * t209 * 5.43860953025742e-6
        t273 = t44 * t87 * t170 * t200 * 2.888145048134885e-5
        t274 = t77 * t133 * t168 * t211 * 1.071251714048381e-4
        t275 = t263 + t264 + t265 + t266 + t267 + t268 + t269 + t270 + t271 + t272 + t273 + t274 - t24 * t87 * 2.292270341531259e-5 - t24 * t87 * t162 * t198 * 3.869452814178776e-5 - t34 * t87 * t172 * t204 * 2.408872289627689e-5 - t15 * t133 * t156 * t211 * 5.43860953025742e-6 - t77 * t87 * t168 * t195 * 1.071251714048381e-4 - t24 * t133 * t162 * t211 * 3.869452814178776e-5 - t44 * t133 * t170 * t211 * 2.888145048134885e-5 - t55 * t133 * t159 * t211 * 2.698593356722665e-4 - t66 * t133 * t164 * t211 * 2.919147494282987e-5
        t276 = t152 * t216 * 9.0e2
        t277 = t15 * t87 * 1.128234845786051e-5
        t278 = t24 * t87 * 6.340821028223617e-5
        t279 = t34 * t87 * 5.49927270442291e-5
        t280 = t44 * t87 * 6.9619499232357e-5
        t281 = t55 * t87 * 2.725681819413176e-3
        t282 = t66 * t87 * 6.335636802894656e-5
        t283 = t77 * t87 * 3.419331942636945e-4
        t284 = t77 * t114 * t133 * t211 * 1.071251714048381e-4
        t285 = t44 * t133 * t139 * t211 * 2.888145048134885e-5
        t286 = t34 * t133 * t142 * t211 * 2.408872289627689e-5
        t287 = t66 * t133 * t145 * t211 * 2.919147494282987e-5
        t288 = t15 * t133 * t148 * t211 * 5.43860953025742e-6
        t289 = t55 * t104 * t133 * t211 * 2.698593356722665e-4
        t290 = t277 + t278 + t279 + t280 + t281 + t282 + t283 + t284 + t285 + t286 + t287 + t288 + t289 - t55 * t87 * t104 * t191 * 2.698593356722665e-4 - t24 * t87 * t135 * t198 * 3.869452814178776e-5 - t15 * t87 * t148 * t209 * 5.43860953025742e-6 - t34 * t87 * t142 * t204 * 2.408872289627689e-5 - t44 * t87 * t139 * t200 * 2.888145048134885e-5 - t77 * t87 * t114 * t195 * 1.071251714048381e-4 - t66 * t87 * t145 * t188 * 2.919147494282987e-5 - t24 * t133 * t135 * t211 * 3.869452814178776e-5
        return np.reshape([-t185 * t259 + t223 * (
                t226 + t150 * t153 * t176 * 1.8e3) - t2 * t152 * t182 * 1.8e3 - t2 * t150 * t152 * t243 * 9.0e2 + t2 * t150 ** 2 * t176 * t182 * 1.8e3,
                           t243 * t262 + t182 * (
                                   t226 - t150 * t176 * t227 * 1.8e3) + t152 * t216 * t223 * 9.0e2 + t3 * t152 * t216 * t259 * 9.0e2 - t3 * t150 * t176 * t216 * t223 * 1.8e3,
                           -t185 * t290 - t223 * (
                                   t276 - t153 * t176 * t216 * 1.8e3) - t150 * t152 * t182 * 9.0e2 + t2 * t150 * t152 * t275 * 9.0e2 + t2 * t150 * t176 * t182 * t216 * 1.8e3,
                           -t262 * t275 - t182 * (
                                   t276 + t176 * t216 * t227 * 1.8e3) + t3 * t152 * t223 * 1.8e3 + t3 * t152 * t216 * t290 * 9.0e2 - t3 * t176 * t216 ** 2 * t223 * 1.8e3],
                          [2, 2], 'F')

    def weights(self, x):
        num = np.zeros(self.nKernels)
        for w in range(self.nKernels):
            num[w] = self.priors[w] * self.mvn_pdf(x, self.mu[w, :self.n], self.sigma[w, :self.n, :self.n])
        den = num.sum()
        return num / den

    @staticmethod
    def mvn_pdf(x, mu, sigma):
        n = x.size
        return 1 / np.sqrt((2 * np.pi) ** n * np.linalg.det(sigma)) * np.exp(
            -0.5 * (x - mu).transpose().dot(np.linalg.inv(sigma).dot(x - mu)))

    def modulation_matrix(self, x):
        xd = x - self.o_c
        return np.eye(self.n) + (self.o_r / xd.transpose().dot(xd))**2 * (xd.transpose().dot(xd) * np.eye(self.n) -
                                                                          2 * np.outer(xd, xd))

    def gamma(self, x):
        return sum((np.linalg.norm(x[i] - self.o_c[i]) / self.o_r) ** 2 for i in range(self.n))

    def lambda_r(self, x):
        return 1 - 1 / self.gamma(x)

    def lambda_e(self, x):
        return 1 + 1 / self.gamma(x)
